import os
from re import T
import sys
from pathlib import Path
sys.path.append(str(Path(__file__).resolve().parents[1]))
from asm_embedding.FunctionAnalyzerRadare import RadareFunctionAnalyzer

folder = "database_sample/warzone"
output_file = "findThreshold/outputs/output_warzone_rc4_pattern_matching.txt"

murmurhash = b"\x55\x8b\xec\x53\x8b\xda\x8b\xc3\x99\x83\xe2\x03\x56\x57\x8d\x3c\x02\x8b\x55\x08\xc1\xff\x02\x8d\x34\xb9\xf7\xdf\x74\x23\x69\x04\xbe\x51\x2d\x9e\xcc\xc1\xc0\x0f\x69\xc0\x93\x35\x87\x1b\x33\xc2\xc1\xc0\x0d\x6b\xd0\x05\x81\xea\x9c\x94\xab\x19\x83\xc7\x01\x75\xdd\x8b\xc3\x33\xc9\x83\xe0\x03\x83\xe8\x01\x74\x1a\x83\xe8\x01\x74\x0c\x83\xe8\x01\x75\x26\x0f\xb6\x4e\x02\xc1\xe1\x10\x0f\xb6\x46\x01\xc1\xe0\x08\x33\xc8\x0f\xb6\x06\x33\xc1\x69\xc0\x51\x2d\x9e\xcc\xc1\xc0\x0f\x69\xc0\x93\x35\x87\x1b\x33\xd0\x33\xd3\x8b\xc2\xc1\xe8\x10\x33\xc2\x69\xc8\x6b\xca\xeb\x85\x5f\x5e\x5b\x8b\xc1\xc1\xe8\x0d\x33\xc1\x69\xc0\x35\xae\xb2\xc2\x8b\xc8\xc1\xe9\x10\x33\xc8\x8b\x45\x0c\x89\x08\x5d"
murmurhash2 = b"\x55\x8b\xec\x83\xec\x2c\x8b\x45\x08\x89\x45\xe0\x8b\x45\x0c\x99\x83\xe2\x03\x03\xc2\xc1\xf8\x02\x89\x45\xec\x8b\x45\x10\x89\x45\xf8\xc7\x45\xd8\x51\x2d\x9e\xcc\xc7\x45\xd4\x93\x35\x87\x1b\x8b\x45\xec\x8b\x4d\xe0\x8d\x04\x81\x89\x45\xdc\x8b\x45\xec\xf7\xd8\x89\x45\xf0\xeb\x07\x8b\x45\xf0\x40\x89\x45\xf0\x83\x7d\xf0\x00\x74\x59\xff\x75\xf0\xff\x75\xdc\xe8\x59\x2d\xfe\xff\x59\x59\x89\x45\xf4\x69\x45\xf4\x51\x2d\x9e\xcc\x89\x45\xf4\x6a\x0f\xff\x75\xf4\xe8\x1e\x2d\xfe\xff\x59\x59\x89\x45\xf4\x69\x45\xf4\x93\x35\x87\x1b\x89\x45\xf4\x8b\x45\xf8\x33\x45\xf4\x89\x45\xf8\x6a\x0d\xff\x75\xf8\xe8\xfc\x2c\xfe\xff\x59\x59\x89\x45\xf8\x6b\x45\xf8\x05\x2d\x9c\x94\xab\x19\x89\x45\xf8\xeb\x9a\x8b\x45\xec\x8b\x4d\xe0\x8d\x04\x81\x89\x45\xe4\x83\x65\xfc\x00\x8b\x45\x0c\x83\xe0\x03\x89\x45\xe8\x83\x7d\xe8\x01\x74\x39\x83\x7d\xe8\x02\x74\x1d\x83\x7d\xe8\x03\x74\x02\xeb\x6a\x33\xc0\x40\xd1\xe0\x8b\x4d\xe4\x0f\xb6\x04\x01\xc1\xe0\x10\x33\x45\xfc\x89\x45\xfc\x33\xc0\x40\xc1\xe0\x00\x8b\x4d\xe4\x0f\xb6\x04\x01\xc1\xe0\x08\x33\x45\xfc\x89\x45\xfc\x33\xc0\x40\x6b\xc0\x00\x8b\x4d\xe4\x0f\xb6\x04\x01\x33\x45\xfc\x89\x45\xfc\x69\x45\xfc\x51\x2d\x9e\xcc\x89\x45\xfc\x6a\x0f\xff\x75\xfc\xe8\x6a\x2c\xfe\xff\x59\x59\x89\x45\xfc\x69\x45\xfc\x93\x35\x87\x1b\x89\x45\xfc\x8b\x45\xf8\x33\x45\xfc\x89\x45\xf8\x8b\x45\xf8\x33\x45\x0c\x89\x45\xf8\xff\x75\xf8\xe8\x71\x2c\xfe\xff\x59\x89\x45\xf8\x8b\x45\x14\x8b\x4d\xf8\x89\x08\xc9"
findstart = b"\x55\x8b\xec\x83\xec\x14\xc6\x45\xff\x00\xc7\x45\xf4\x90\x1d\x42\x00\xc6\x45\xf8\x4d\xc6\x45\xf9\x5a\xc6\x45\xfa\x90\xc6\x45\xfb\x00\x83\x65\xf0\x00\x0f\xb6\x45\xff\x85\xc0\x75\x42\x6a\x04\xff\x75\xf4\x8d\x45\xf8\x50\xe8\x12\xf5\xfd\xff\x83\xc4\x0c\x89\x45\xec\x83\x7d\xec\x00\x75\x0b\xc6\x45\xff\x01\x8b\x45\xf4\xeb\x21\xeb\x07\x8b\x45\xf4\x48\x89\x45\xf4\x8b\x45\xf0\x40\x89\x45\xf0\x81\x7d\xf0\xe8\x03\x00\x00\x75\x04\x83\x65\xf0\x00\xeb\xb6\x33\xc0\xc9"
findstart2 = b"\x55\x8b\xec\x51\xb9\x0e\x5c\x41\x00\xc7\x45\xfc\x4d\x5a\x90\x00\x8d\x45\xfc\x8b\x00\x3b\x01\x74\x03\x49\xeb\xf4\x8b\xc1\xc9"
findstart3 = b"\x55\x8b\xec\x51\x53\x56\xbe\x23\x33\x41\x00\xc7\x45\xfc\x4d\x5a\x90\x00\x33\xdb\x6a\x04\x8d\x45\xfc\x56\x50\xe8\xbd\xdc\xfe\xff\x83\xc4\x0c\x85\xc0\x74\x13\x33\xc9\x8d\x43\x01\x4e\x81\xfb\xe7\x03\x00\x00\x0f\x45\xc8\x8b\xd9\xeb\xda\x8b\xc6\x5e\x5b\xc9"
findstart4 = b"\x55\x8b\xec\x51\x53\x56\xbe\xa2\x1c\x41\x00\xc7\x45\xfc\x4d\x5a\x90\x00\x33\xdb\x6a\x04\x8d\x45\xfc\x56\x50\xe8\x3e\xf3\xfe\xff\x83\xc4\x0c\x85\xc0\x74\x13\x33\xc9\x8d\x43\x01\x4e\x81\xfb\xe7\x03\x00\x00\x0f\x45\xc8\x8b\xd9\xeb\xda\x8b\xc6\x5e\x5b\xc9"
findstart5 = b"\x55\x8b\xec\x51\xb9\xe5\x17\x42\x00\xc7\x45\xfc\x4d\x5a\x90\x00\x8d\x45\xfc\x8b\x00\x3b\x01\x74\x03\x49\xeb\xf4\x8b\xc1\xc9"
copy1 = b'\x56\x33\xf6\x39\x74\x24\x08\x76\x0d\x8a\x04\x16\x88\x04\x0e\x46\x3b\x74\x24\x08\x72\xf3\x5e'
copy2 =  b'\x55\x8b\xec\x56\x8b\x75\x08\x85\xf6\x74\x11\x57\x8b\xf9\x2b\xfa\x8a\x02\x88\x04\x17\x42\x83\xee\x01\x75\xf5\x5f\x8b\xc1\x5e\x5d'
copy3 =  b'\x55\x8b\xec\x83\x7d\x10\x00\x8b\x4d\x08\x56\x8b\xf1\x74\x12\x8b\x55\x0c\x8a\x02\xff\x4d\x10\x88\x01\x41\x42\x83\x7d\x10\x00\x75\xf1\x8b\xc6\x5e\x5d'
crc32_1 = b'\x53\x55\x56\x33\xf6\x8b\xda\x8b\xe9\x39\x35\x04\xac\x41\x00\x75\x38\x57\x8b\xfe\xb9\x00\xa8\x41\x00\x6a\x08\x8b\xc7\x5a\xa8\x01\x74\x09\xd1\xe8\x35\x20\x83\xb8\xed\xeb\x02\xd1\xe8\x4a\x75\xee\x89\x01\x47\x83\xc1\x04\x81\xff\x00\x01\x00\x00\x72\xdb\xc7\x05\x04\xac\x41\x00\x01\x00\x00\x00\x5f\x83\xc9\xff\x85\xdb\x74\x1a\x0f\xb6\x04\x2e\x33\xc1\xc1\xe9\x08\x25\xff\x00\x00\x00\x33\x0c\x85\x00\xa8\x41\x00\x46\x3b\xf3\x72\xe6\x5e\xf7\xd1\x5d\x8b\xc1\x5b'
crc32_2 = b'\x53\x55\x56\x33\xf6\x8b\xda\x8b\xe9\x39\x35\x04\xbc\x41\x00\x75\x38\x57\x8b\xfe\xb9\x00\xb8\x41\x00\x6a\x08\x8b\xc7\x5a\xa8\x01\x74\x09\xd1\xe8\x35\x20\x83\xb8\xed\xeb\x02\xd1\xe8\x4a\x75\xee\x89\x01\x47\x83\xc1\x04\x81\xff\x00\x01\x00\x00\x72\xdb\xc7\x05\x04\xbc\x41\x00\x01\x00\x00\x00\x5f\x83\xc9\xff\x85\xdb\x74\x1a\x0f\xb6\x04\x2e\x33\xc1\xc1\xe9\x08\x25\xff\x00\x00\x00\x33\x0c\x85\x00\xb8\x41\x00\x46\x3b\xf3\x72\xe6\x5e\xf7\xd1\x5d\x8b\xc1\x5b'
crc32_3 = b'\x53\x55\x56\x33\xf6\x8b\xda\x8b\xe9\x39\x35\x28\xff\x40\x00\x75\x38\x57\x8b\xfe\xb9\x20\xfb\x40\x00\x6a\x08\x8b\xc7\x5a\xa8\x01\x74\x09\xd1\xe8\x35\x20\x83\xb8\xed\xeb\x02\xd1\xe8\x4a\x75\xee\x89\x01\x47\x83\xc1\x04\x81\xff\x00\x01\x00\x00\x72\xdb\xc7\x05\x28\xff\x40\x00\x01\x00\x00\x00\x5f\x83\xc9\xff\x85\xdb\x74\x1a\x0f\xb6\x04\x2e\x33\xc1\xc1\xe9\x08\x25\xff\x00\x00\x00\x33\x0c\x85\x20\xfb\x40\x00\x46\x3b\xf3\x72\xe6\x5e\xf7\xd1\x5d\x8b\xc1\x5b'
crc32_4 = b'\x53\x55\x56\x33\xf6\x8b\xda\x8b\xe9\x39\x35\x64\xc1\x41\x00\x75\x38\x57\x8b\xfe\xb9\x60\xbd\x41\x00\x6a\x08\x8b\xc7\x5a\xa8\x01\x74\x09\xd1\xe8\x35\x20\x83\xb8\xed\xeb\x02\xd1\xe8\x4a\x75\xee\x89\x01\x47\x83\xc1\x04\x81\xff\x00\x01\x00\x00\x72\xdb\xc7\x05\x64\xc1\x41\x00\x01\x00\x00\x00\x5f\x83\xc9\xff\x85\xdb\x74\x1a\x0f\xb6\x04\x2e\x33\xc1\xc1\xe9\x08\x25\xff\x00\x00\x00\x33\x0c\x85\x60\xbd\x41\x00\x46\x3b\xf3\x72\xe6\x5e\xf7\xd1\x5d\x8b\xc1\x5b'
rc4_1 = b'\x55\x8b\xec\x51\x51\x53\x56\x33\xf6\x89\x55\xfc\x57\x89\x4d\xf8\x8b\xfe\x8b\xc7\x8a\x1c\x0f\x99\xf7\x7d\x08\x8b\x45\xfc\x0f\xb6\xcb\x0f\xb6\x04\x02\x03\xf0\x03\xf1\x81\xe6\xff\x00\x00\x80\x79\x08\x4e\x81\xce\x00\xff\xff\xff\x46\x8b\x4d\xf8\x8a\x04\x0e\x88\x04\x0f\x47\x88\x1c\x0e\x81\xff\x00\x01\x00\x00\x7c\xc4\x5f\x5e\x5b\xc9'
rc4_variant = b'\x55\x8b\xec\x83\xec\x10\x53\x8b\xd9\x56\x33\xf6\x89\x5d\xfc\x89\x75\xf8\x39\x73\x0c\x0f\x84\x36\x01\x00\x00\x39\x73\x10\x0f\x84\x2d\x01\x00\x00\x89\x73\x04\x8b\xc6\x89\x33\x8b\x4b\x0c\x0f\xb6\xd0\x8a\x03\x88\x04\x0a\x8b\x03\x40\x89\x03\x3d\x00\x01\x00\x00\x72\xe9\x89\x33\x8b\xc6\x57\x0f\xb6\xf0\x33\xd2\xb9\xfa\x00\x00\x00\x8b\x7b\x0c\xf7\xf1\x8b\x43\x10\x0f\xbe\x0c\x02\x0f\xbe\x04\x3e\x03\xc8\x01\x4b\x04\x8b\x43\x04\x0f\xb6\xc0\x8a\x04\x38\x30\x04\x3e\x8b\x53\x0c\x0f\xb6\x03\x0f\xb6\x4b\x04\x8a\x04\x10\x30\x04\x11\x8b\x53\x0c\x0f\xb6\x43\x04\x0f\xb6\x0b\x8a\x04\x10\x30\x04\x11\x8b\x03\x40\x89\x03\x3d\x00\x01\x00\x00\x72\xa9\x33\xc0\x89\x03\x89\x43\x04\x39\x43\x08\x0f\x86\xa2\x00\x00\x00\x8b\xc8\x8b\x7d\xfc\x8d\x41\x01\x89\x03\x8b\x53\x0c\x0f\xb6\xc8\x8a\x1c\x11\x0f\xbe\xc3\x01\x47\x04\x89\x45\xf0\x8b\x47\x04\x0f\xb6\xc0\x8a\x04\x10\x88\x04\x11\x0f\xb6\x4f\x04\x0f\xbe\xf0\x8b\x47\x0c\x89\x75\xf4\x88\x1c\x01\x8b\xdf\x8b\x73\x04\x8b\xce\x8b\x13\x8b\xc2\x8b\x7b\x0c\xc1\xe0\x05\xc1\xe9\x03\x33\xc8\xc1\xea\x03\x0f\xb6\xc1\x0f\xbe\x0c\x38\x8b\xc6\xc1\xe0\x05\x33\xd0\x0f\xb6\xc2\x8b\x55\xf4\x0f\xbe\x04\x38\x03\xc8\x8b\x45\xf0\x83\xf1\xaa\x03\xc2\x0f\xb6\xc9\x0f\xb6\xc0\x8a\x0c\x39\x02\x0c\x38\x8d\x04\x16\x8b\x55\x08\x0f\xb6\xc0\x32\x0c\x38\x8b\x45\xf8\x30\x0c\x10\x40\xff\x03\x8b\x0b\x89\x45\xf8\x3b\x43\x08\x0f\x82\x60\xff\xff\xff\x5f\x5e\x5b\xc9'
rc4_variant2 = b'\x55\x8b\xec\x81\xec\x80\x00\x00\x00\x56\x57\x89\x4d\xfc\x8b\x4d\xfc\x83\xc1\x0c\xe8\xa3\x03\x00\x00\x85\xc0\x74\x0f\x8b\x4d\xfc\x83\xc1\x10\xe8\x94\x03\x00\x00\x85\xc0\x75\x05\xe9\x1e\x03\x00\x00\x8b\x45\xfc\x83\x60\x04\x00\x8b\x45\xfc\x83\x20\x00\xeb\x0b\x8b\x45\xfc\x8b\x00\x40\x8b\x4d\xfc\x89\x01\x8b\x45\xfc\x81\x38\x00\x01\x00\x00\x73\x25\x8b\x45\xfc\x8a\x00\x88\x45\xfb\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xd8\x8b\x45\xfc\xff\x30\x8b\x4d\xd8\xe8\x56\x03\x00\x00\x8a\x4d\xfb\x88\x08\xeb\xc5\x8b\x45\xfc\x83\x20\x00\xeb\x0b\x8b\x45\xfc\x8b\x00\x40\x8b\x4d\xfc\x89\x01\x8b\x45\xfc\x81\x38\x00\x01\x00\x00\x0f\x83\x25\x01\x00\x00\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xd0\x8b\x45\xfc\x83\xc0\x10\x89\x45\xd4\x8b\x45\xfc\xff\x30\x8b\x4d\xd4\xe8\xcc\x02\x00\x00\x0f\xbe\x30\x8b\x45\xfc\xff\x30\x8b\x4d\xd0\xe8\xfe\x02\x00\x00\x0f\xbe\x00\x8b\x4d\xfc\x8b\x49\x04\x03\xc8\x03\xce\x8b\x45\xfc\x89\x48\x04\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xcc\x8b\x45\xfc\xff\x70\x04\x8b\x4d\xcc\xe8\xd4\x02\x00\x00\x0f\xbe\x00\x89\x45\xc4\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xc8\x8b\x45\xfc\xff\x30\x8b\x4d\xc8\xe8\xb8\x02\x00\x00\x89\x45\xe4\x8b\x45\xe4\x8a\x00\x88\x45\xfa\x0f\xbe\x45\xfa\x33\x45\xc4\x8b\x4d\xe4\x88\x01\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xc0\x8b\x45\xfc\xff\x30\x8b\x4d\xc0\xe8\x8b\x02\x00\x00\x0f\xbe\x00\x89\x45\xb8\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xbc\x8b\x45\xfc\xff\x70\x04\x8b\x4d\xbc\xe8\x6e\x02\x00\x00\x89\x45\xe0\x8b\x45\xe0\x8a\x00\x88\x45\xf9\x0f\xbe\x45\xf9\x33\x45\xb8\x8b\x4d\xe0\x88\x01\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xb4\x8b\x45\xfc\xff\x70\x04\x8b\x4d\xb4\xe8\x40\x02\x00\x00\x0f\xbe\x00\x89\x45\xac\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xb0\x8b\x45\xfc\xff\x30\x8b\x4d\xb0\xe8\x24\x02\x00\x00\x89\x45\xdc\x8b\x45\xdc\x8a\x00\x88\x45\xf8\x0f\xbe\x45\xf8\x33\x45\xac\x8b\x4d\xdc\x88\x01\xe9\xc1\xfe\xff\xff\x83\x65\xf0\x00\x8b\x45\xfc\x83\x20\x00\x8b\x45\xfc\x83\x60\x04\x00\x8b\x45\xfc\x8b\x4d\xf0\x3b\x48\x08\x0f\x83\x6d\x01\x00\x00\x8b\x45\xfc\x8b\x00\x40\x8b\x4d\xfc\x89\x01\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xa8\x8b\x45\xfc\xff\x30\x8b\x4d\xa8\xe8\xc7\x01\x00\x00\x0f\xbe\x00\x89\x45\xec\x8b\x45\xfc\x8b\x40\x04\x03\x45\xec\x8b\x4d\xfc\x89\x41\x04\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xa4\x8b\x45\xfc\xff\x70\x04\x8b\x4d\xa4\xe8\x9b\x01\x00\x00\x0f\xbe\x00\x89\x45\xe8\x8b\x45\xfc\x83\xc0\x0c\x89\x45\xa0\x8b\x45\xfc\xff\x30\x8b\x4d\xa0\xe8\x7f\x01\x00\x00\x8a\x4d\xe8\x88\x08\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x9c\x8b\x45\xfc\xff\x70\x04\x8b\x4d\x9c\xe8\x63\x01\x00\x00\x8a\x4d\xec\x88\x08\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x94\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x98\x8b\x45\xfc\x8b\x00\xc1\xe8\x03\x8b\x4d\xfc\x8b\x49\x04\xc1\xe1\x05\x33\xc8\x51\x8b\x4d\x98\xe8\x30\x01\x00\x00\x0f\xbe\x30\x8b\x45\xfc\x8b\x40\x04\xc1\xe8\x03\x8b\x4d\xfc\x8b\x09\xc1\xe1\x05\x33\xc8\x51\x8b\x4d\x94\xe8\x11\x01\x00\x00\x0f\xbe\x00\x03\xc6\x89\x45\x8c\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x84\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x88\x8b\x45\xfc\x83\xc0\x0c\x89\x45\x90\x8b\x45\xfc\x8b\x40\x04\x03\x45\xe8\x50\x8b\x4d\x90\xe8\xdc\x00\x00\x00\x0f\xbe\x30\x8b\x45\x8c\x35\xaa\x00\x00\x00\x50\x8b\x4d\x88\xe8\xc8\x00\x00\x00\x0f\xbe\x38\x8b\x45\xec\x03\x45\xe8\x50\x8b\x4d\x84\xe8\xb6\x00\x00\x00\x0f\xbe\x00\x03\xc7\x33\xc6\x89\x45\x80\x8b\x45\x08\x03\x45\xf0\x8a\x00\x88\x45\xf7\x0f\xbe\x45\xf7\x33\x45\x80\x8b\x4d\x08\x03\x4d\xf0\x88\x01\x8b\x45\xf0\x40\x89\x45\xf0\x8b\x45\xfc\x8b\x00\x40\x8b\x4d\xfc\x89\x01\xe9\x84\xfe\xff\xff\x5f\x5e\xc9'

bytes_murmurhash = [murmurhash, murmurhash2]
bytes_findstart = [findstart, findstart2, findstart3, findstart4, findstart5]
bytes_copy = [copy1, copy2, copy3]
crc32 = [crc32_1, crc32_2, crc32_3, crc32_4]
rc4 = [rc4_1, rc4_variant, rc4_variant2]
murmurhash_flag, findstart_flag, copy_flag, crc32_flag, rc4_flag = False, False, False,False,True

file_with_match = []
file_without_match = []

files = list(os.listdir(folder))
files.sort()
for file in files:
    with open(folder+'/'+file, "rb") as f:
        data = f.read()
        found_murmurhash = False
        found_findstart = False
        found_copy = False
        found_crc32 = False
        found_rc4 = False
        if murmurhash_flag:
            for byte in bytes_murmurhash:
                if byte in data:
                    file_with_match.append(file+':'+str(bytes_murmurhash.index(byte)+1)+' murmurhash')
                    found_murmurhash = True
                    # break
            if not found_murmurhash:
                file_without_match.append(file + ': murmurhash')
                print(f'{file} - murmurhash')
        if findstart_flag:
            for byte in bytes_findstart:
                if byte in data:
                    file_with_match.append(file+':'+str(bytes_findstart.index(byte)+1)+' findstart')
                    found_findstart = True
                    # break
            if not found_findstart:
                file_without_match.append(file + ': findstart')
                print(f'{file} - findstart')
        if copy_flag:
            for byte in bytes_copy:
                if byte in data:
                    file_with_match.append(file+':'+str(bytes_copy.index(byte)+1)+' copy')
                    found_copy = True
                    # break
            if not found_copy:
                file_without_match.append(file + ': copy')
                print(f'{file} - copy')
        if crc32_flag:
            for i,byte in enumerate(crc32):
                if byte in data:
                    file_with_match.append(file+': crc32_'+str(i+1))
                    found_crc32 = True
            if not found_crc32:
                file_without_match.append(file + ': crc32')
                print(f'{file} - crc32')
        if rc4_flag:
            for i,byte in enumerate(rc4):
                if byte in data:
                    file_with_match.append(file+': rc4_'+str(i+1))
                    found_rc4 = True
            if not found_rc4:
                file_without_match.append(file + ': rc4')
                print(f'{file} - rc4')
        
with open(output_file, 'w') as f:
    f.write('Files with match:\n')
    for file in file_with_match:
        f.write(file+'\n')
    f.write('\nFiles without match:\n')
    for file in file_without_match:
        f.write(file+'\n')
        